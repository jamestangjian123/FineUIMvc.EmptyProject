@{
    ViewBag.Title = "首页";
    var F = @Html.F();
}

@section head {

    <link type="text/css" rel="stylesheet" href="~/res/css/index.css" />

}

@section body {

    <div id="header" class="ui-widget-header f-mainheader">
        <table>
            <tr>
                <td>
                    @(F.Button()
                            //.OnClientClick("window.open('http://fineui.com/mvc/','_blank');")
                        .EnableDefaultCorner(false)
                        .EnableDefaultState(false)
                        .IconFont(IconFont.Book)
                        .IconAlign(IconAlign.Top)
                        .ToolTip("系统LOGO")
                        .ID("btnHomePage")
                        .CssClass("icononlyaction")
                    )
                    <a class="logo" @*href="@Url.Content("~/")"*@ title="@FineUIMvc.EmptyProject.Models.CShenGoSystemInfo._sTitle">
                        @FineUIMvc.EmptyProject.Models.CShenGoSystemInfo._sTitle <span style="font-size:9px;vertical-align:text-bottom;padding-bottom:15px">@FineUIMvc.EmptyProject.Models.CShenGoSystemInfo._sVersion </span>
                    </a>
           
                </td>
                <td style="text-align: right;">
                    @*@(F.Button()
                            .EnableDefaultCorner(false)
                            .EnableDefaultState(false)
                            .IconFont(IconFont.Bank)
                            .IconAlign(IconAlign.Top)
                            .Text("我的邮件")
                            .ID("btnThemeSelect")
                            .CssClass("icontopaction themes")
                            .Listener("click", "onThemeSelectClick")
                        )

                        @(F.Button()
                            .EnableDefaultCorner(false)
                            .EnableDefaultState(false)
                            .IconFont(IconFont.Bank)
                            .IconAlign(IconAlign.Top)
                            .Text("我的文档")
                            .ID("btnThemeSelect")
                            .CssClass("icontopaction themes")
                            .Listener("click", "onThemeSelectClick")
                        )

                        @(F.Button()
                            .EnableDefaultCorner(false)
                            .EnableDefaultState(false)
                            .IconFont(IconFont.Bank)
                            .IconAlign(IconAlign.Top)
                            .Text("我的任务")
                            .ID("btnThemeSelect")
                            .CssClass("icontopaction themes")
                            .Listener("click", "onThemeSelectClick")
                        )*@


                    @(F.Button()
                        .EnableDefaultCorner(false)
                        .EnableDefaultState(false)
                        .IconFont(IconFont.Home)
                        .IconAlign(IconAlign.Top)
                        .Text("更换主题")
                        .ID("btnThemeSelect")
                        .CssClass("icontopaction themes")
                        .Listener("click", "onThemeSelectClick")
                    )

                    @(F.Button()
                        .EnableDefaultCorner(false)
                        .EnableDefaultState(false)
                        .IconAlign(IconAlign.Left)
                        .IconFont(IconFont.User)
                            //.IconUrl(Url.Content("~/res/images/my_face_80.png"))
                        .Text(ViewBag.userName)
                        .CssClass("icontopaction")
                        .Menu(F.Menu()
                            .Items(
                                F.MenuButton()
                                    .IconFont(IconFont.User)
                                    .Text("修改密码")
                                    .Listener("click", "F.ui.windPassword.show();"),
                                F.MenuSeparator(),
                                F.MenuButton()
                                    .IconFont(IconFont.SignOut)
                                    .Text("重新登录")
                            //.ConfirmText("确认要重新登录吗?")
                            //.ConfirmTarget(Target.Top)
                                    .OnClick(Url.Action("btnReLogin_Click"))
                            //.Listener("click", "window.location.href='/Login/Index';")
                            )
                        )
                    )
                </td>
            </tr>
        </table>
    </div>

    @(F.RegionPanel()
        .ID("RegionPanel1")
        .ShowBorder(false)
        .IsViewPort(true)
        .CssClass("mainpanel")
        .Regions(
            F.Region()
                .ID("Region1")
                .ShowBorder(false)
                .ShowHeader(false)
                .RegionPosition(Position.Top)
                .CssClass("topregion bgpanel")
                .Layout(LayoutType.Fit)
                .ContentEl("#header"),
             F.Region()
                .ID("Region2")
                .RegionSplit(true)
                .RegionSplitHeaderClass(false)
                .RegionPosition(Position.Left)
                .Width(200)
                .ShowHeader(false)
                .Title("目录")
                .EnableCollapse(true)
                .Layout(LayoutType.Fit)
                .Items((ControlBase[])ViewBag.Menus),
            //F.Region()
            //    .ID("Region2")
            //    .RegionSplit(true)
            //    .RegionSplitWidth(2)
            //    .RegionSplitIcon(false)
            //    .Width(200)
            //    .ShowHeader(false)
            //    .Title("菜单")
            //    .EnableCollapse(true)
            //    .Layout(LayoutType.Fit)
            //    .RegionPosition(Position.Left)
            //    .CssClass("leftregion bgpanel")
            //    .Items(
            //        F.Tree()
            //            .ShowBorder(false)
            //            .ShowHeader(false)
            //            .Title("功能菜单")
            //            .ID("treeMenu")
            //            .Nodes((TreeNode[])ViewBag.TreeMenuNodes)
            //    ),
             F.Region()
                .ID("Region3")
                .ShowHeader(false)
                .EnableIFrame(true)
                .IFrameName("mainPage")
                .RegionPosition(Position.Center)
            //F.Region()
            //    .ID("mainRegion")
            //    .ShowHeader(false)
            //    .Layout(LayoutType.Fit)
            //    .RegionPosition(Position.Center)
            //    .CssClass("centerregion")
            //    .Items(
            //        F.TabStrip()
            //            .ID("mainTabStrip")
            //            .EnableTabCloseMenu(true)
            //            .ShowBorder(false)
            //    .Tabs(
            //        F.Tab()
            //                .ID("Tab1")
            //            .Title("首页")
            //            .BodyPadding(10)
            //            .Layout(LayoutType.Fit)
            //            .Icon(Icon.House)
            //            .ContentEl("#maincontent")
            //        )
            //    )
        )
    )


    @(F.Window()
        .Hidden(true)
        .EnableResize(true)
        .EnableMaximize(true)
        .EnableClose(true)
        .Height(600)
        .Width(1020)
        .IsModal(true)
        .ClearIFrameAfterClose(false)
        .IFrameUrl(Url.Content("~/Home/Themes"))
        .EnableIFrame(true)
        .Title("主题仓库")
        .ID("windowThemeRoller")
    )
    @(F.Window()
        .Width(350)
        .WindowPosition(WindowPosition.GoldenSection)
        .EnableClose(true)
        .IsModal(true)
        .Hidden(true)
        .Title("重设密码")
        .ID("windPassword")
        .Items(
            F.SimpleForm()
                .ShowHeader(false)
                .LabelWidth(80)
                .BodyPadding(10)
                .ShowBorder(false)
                .ID("frmPassword")
                .Items(
                    F.TextBox()
                        .ShowRedStar(true)
                        .Required(true)
                        .TextMode(TextMode.Password)
                        .Label("密码:")
                        .Text("")
                        .ID("txtPassword1"),
                    F.TextBox()
                        .ShowRedStar(true)
                        .Required(true)
                        .TextMode(TextMode.Password)
                        .Label("重复:")
                        .Text("")
                        .ID("txtPassword2")
                )
        )
        .Toolbars(
            F.Toolbar()
                .Position(ToolbarPosition.Bottom)
                .ToolbarAlign(ToolbarAlign.Right)
                .ID("tblpassword")
                .Items(
                    F.Button()
                        .OnClick(Url.Action("btnSavePassword_Click"), "frmPassword")
                        .ValidateTarget(Target.Top)
                        .ValidateForms("frmPassword")
                        .Type(ButtonType.Submit)
                        .Text("保存修改")
                        .ID("btnSavePassword")
                )
        )
    )
}

@section script {

    <script>

        // 点击主题仓库
        function onThemeSelectClick(event) {
            F.ui.windowThemeRoller.show();
        }

        function confirmOKCallback() {
              F.doPostBack('@Url.Action("LoginOut")');
        }


        // 页面控件初始化完毕后，会调用用户自定义的onReady函数
        F.ready(function () {

            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息

            //F.initTreeTabStrip(F.ui.treeMenu, F.ui.mainTabStrip, {
            //    maxTabCount: 10,
            //    maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            //});

        });
    </script>
}
